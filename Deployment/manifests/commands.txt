http://cloudhacks.blog/2020/11/creating-kubernetes-service-accounts-and-azure-devops-service-connection/
https://dev.to/rizwankh_24/how-to-use-service-accounts-for-kubernetes-imagepullsecrets-3b57
https://stackoverflow.com/questions/72256006/service-account-secret-is-not-listed-how-to-fix-it


#CREATION OF SECRET
kubectl create secret docker-registry myregistrykey --docker-server=DOCKER_REGISTRY_SERVER --docker-username=DOCKER_USER --docker-password=DOCKER_PASSWORD --docker-email=DOCKER_EMAIL

#CREATION SERVICE ACCOUNT 
kubectl create serviceaccount bats-serviceaccount -n default

    apiVersion: v1
    kind: ServiceAccount
    metadata:
        name: bats-serviceaccount 
        imagePullSecrets:
            - name: acr-secret

#CREATE ROLE 
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: bats-service-role
  namespace: default
rules:
- apiGroups: ["*","apps","extensions"]
  resources: ["*"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]

#CREATION OF ROLEBINDING
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bats-service-role-rolebinding
  namespace: default
subjects:
- kind: ServiceAccount
  name: bats-serviceaccount
  namespace: default
roleRef:
  kind: Role
  name: bats-service-role
  apiGroup: rbac.authorization.k8s.io

#CREATE SECRET FOR SERVICE ACCOUNT 
apiVersion: v1
kind: Secret
metadata:
  name: secret-sa-sample
  annotations:
    kubernetes.io/service-account.name: "sa-name"
type: kubernetes.io/service-account-token
data:
  # You can include additional key value pairs as you do with Opaque Secrets
  extra: YmFyCg==
  
------
apiVersion: v1
kind: Secret
type: kubernetes.io/service-account-token
metadata:
  name: bats-acr-secret
  annotations:
    kubernetes.io/service-account.name: "bats-serviceaccount"

https://developercommunity.visualstudio.com/t/MS-DevOps-Environment--Cannot-Add-Resou/10154315
-------------------------------------------------------------------------------------------------------

kubectl config get-contexts 


docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d 
docker-compose -f docker-compose.yml -f docker-compose.override.yml down

az group create --name myResourceGroup --location westeurope 
az acr create --resource-group bats_test --name batsacr --sku Basic
az acr update -n batsacr --admin-enabled true
az acr login --name batsacr 

az acr list --resource-group bats_test --query "[].{acrLoginServer:loginServer}" --output table
docker tag shoppingapi:latest batsacr.azurecr.io/shoppingapi:v1
docker push batsacr.azurecr.io/shoppingapi:v1

docker tag shoppingclient:latest batsacr.azurecr.io/shoppingclinet:v1
docker push batsacr.azurecr.io/shoppingclinet:v1

az acr repository list --name batsacr --output table 
az acr repository show-tags --name batsacr --repositorty shoppingclient --output table 

az aks create --resource-group bats_test --name batsAKSCluster --node-count 1 --generate-ssh-keys --attach-acr batsacr
az aks install-cli 
az aks get-credentials --resource-group bats_test --name batsAKSCluster

kubectl get all 
kubectl get nodes 
az acr list --resource-group bats_test --query "[].{acrLoginServer:loginServer}" --output table 

kubectl create secret docker-registry acr-secret --docker-server=batsacr.azurecr.io --docker-username=batsacr --docker-password=lPhMb5odF0YGqiPVOIfY6G6aU3DkXvsMd+Zh9Fvd1i+ACRByfx5F --docker-email=ky.tranthe@vn.bosch.com 
kubectl patch serviceaccount bats-serviceaccount -p "{\"imagePullSecrets\": [{\"name\": \"acr-secret\"}]}" -n default
kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "registry-cred"}]}' -n my-namespace

kubectl get serviceAccounts bats-serviceaccount -n default -o=jsonpath={.secrets[*].name}
kubectl get secret bats-serviceaccount -n defafult -o json

kubectl get secret 

kubectl apply -f .\aks\
kubectl get all 
kubectl get svc 
kubectl get pod 

kubectl scale --replicas=3 shoppingclient-deployment


failed to create secret secrets is forbidden: User "system:serviceaccount:default:bats-serviceaccount" cannot create resource "secrets" in API group "" in the namespace "default": RBAC: [role.rbac.authorization.k8s.io "cluster-admin" not found, role.rbac.authorization.k8s.io "create-deployments" not found]
